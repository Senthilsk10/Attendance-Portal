# Generated by Django 4.2.7 on 2023-12-16 15:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dept', models.CharField(blank=True, choices=[('IT', 'Information Technology'), ('CSE', 'Computer Science'), ('AI&ML', 'Artificial Intelligence and Machine Learning')], max_length=10, null=True)),
                ('sem', models.IntegerField(blank=True, choices=[(0, 'teacher'), (1, 'first semester'), (2, 'second semester'), (3, 'third semester'), (4, 'fourth semester'), (5, 'fifth semester'), (6, 'sixth semester'), (7, 'seventh semester'), (8, 'eigth semester')], null=True)),
                ('role', models.CharField(choices=[('Teacher', 'Teacher'), ('Student', 'Student')], default='Student', max_length=10)),
                ('userid', models.BigIntegerField(default=0, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='attendance_pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('recieved_attendance', models.IntegerField(blank=True, default=0)),
                ('is_alive', models.BooleanField(default=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('datefield', models.DateField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept', models.CharField(choices=[('IT', 'Information Technology'), ('CSE', 'Computer Science'), ('AI&ML', 'Artificial Intelligence and Machine Learning')], max_length=45)),
                ('sem', models.IntegerField(choices=[(0, 'teacher'), (1, 'first semester'), (2, 'second semester'), (3, 'third semester'), (4, 'fourth semester'), (5, 'fifth semester'), (6, 'sixth semester'), (7, 'seventh semester'), (8, 'eigth semester')])),
                ('subject_name', models.CharField(max_length=45, null=True)),
                ('subject_code', models.CharField(max_length=10, null=True, unique=True)),
                ('type', models.CharField(choices=[('theory', 'Theory'), ('lab', 'Lab'), ('genral', 'genral')], max_length=45)),
                ('handling_staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='attendance_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_roll', models.IntegerField()),
                ('request_type', models.CharField(choices=[('late', 'late attendance'), ('leave', 'request leave')], max_length=25)),
                ('ip_address', models.GenericIPAddressField()),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.attendance_pool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='attendance_pool',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.subject'),
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_roll', models.IntegerField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], default='absent', max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.attendance_pool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('userid',), name='unique_user_id'),
        ),
    ]
